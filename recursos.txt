
----------
Deploy completo magento 2:
----------
rm -rf var/cache/* var/generation/* var/di/* var/view_preprocessed/* var/page_cache/* pub/static/*
php bin/magento setup:upgrade && php bin/magento setup:di:compile && php bin/magento setup:static-content:deploy -f && php bin/magento cache:flush && php bin/magento indexer:reindex
----------


----------
Comandos deploy magento 2:
----------
php bin/magento setup:static-content:deploy es_AR es_ES en_US -f

php bin/magento cache:flush
php bin/magento cache:enable
php bin/magento maintenance:disable
php bin/magento indexer:reindex
sudo chown -R $USER:www-data . && sudo chmod -R 664 . && sudo find . -type d -exec chmod 775 {} \; && sudo chmod u+x,g+x php bin/magento && sudo find . -path '*.sh' -exec chmod u+x,g+x {} \;
sudo chmod -R 775 pub/ var/ generated/
php bin/magento cache:clean
# Restart service php
sudo systemctl restart php7.2-fpm.service
----------


----------
delete from patch_list where patch_name like "%RustySetup%"; exit;
https://local.maui.com/static/frontend/Linets/Rusty/es_CL/images/Background-Team.jpg
----------


----------
Deploy a STG RUSTY
----------
echo 'delete from patch_list where patch_name like "%RustySetup%";' | mgc db:sql -r database && git push origin Evolutivo
git fetch --all && git checkout integration && git pull origin integration && git merge Evolutivo && echo '' && echo 'Status:' && echo '' && git status
git push origin integration
git fetch --all && git checkout staging && git pull origin staging && echo 'delete from patch_list where patch_name like "%RustySetup%";' | mgc db:sql -r database
git log --name-only --no-merges origin/staging..integration > log_deploy_stg_$(date +%F_%R).log
git log -p --no-merges origin/staging..integration > diff_deploy_stg_$(date +%F_%R).log
git merge integration && echo '' && echo 'Status:' && echo '' && git status
git push origin staging
----------


----------
PHP Mostrar errores:
----------
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
----------


----------
JQuery AJAX ejemplo:
----------
//CONSULTA AJAX
$.ajax({
  url: "https://local.maui.com/checkout/transaction/commitwebpay",
  data: 'token_ws=01abb9dd0c8e18fef74477616bdeb9ed83d80a1d96893750190a25e5544e53a0',
  error: function(xhr){
    console.log("Ocurrió un error: " + xhr.status + " " + xhr.statusText);
  },
  success: function(result){
    console.log(result)
  },
  method: 'POST'
});
----------


----------
Fix bbdd después de clonar magento2:
----------
update core_config_data set value = "https://local.ripcurl.com/" where path like "%base_url%" or path like "%base_link_url%";
update sales_order set customer_email = replace(customer_email , "@", "@test") where customer_email NOT LIKE "%linets.cl%";
update sales_flat_order set customer_email = replace(customer_email , "@", "@test") where customer_email NOT LIKE "%linets.cl%";
update customer_entity set email = replace(email, "@", "@test") where email NOT LIKE "%linets.cl%";
----------


----------
Crear user magento 2 cli:
----------
php bin/magento admin:user:create --admin-user="ecrosa" --admin-password="magento123" --admin-email="ecrosa@linets.cl" --admin-firstname="Admin" --admin-lastname="Admin"
----------


----------
Cambiar bbdd actual en el docker
----------
bin/cli sed -i 's/production/staging/g' app/etc/env.php
----------


----------
Clonar bbdd en entorno local desde magento cloud (ejecutar desde carpeta src):
----------
entornoCloud=production && bbddName=production && url=https://local.maui.com/ && remote=origin &&
echo '' && echo "------ Entorno Cloud: $entornoCloud ------ BBDD: $bbddName ------ URL: $url ------ Git Remote: $remote ------" && echo "Exportando BBDD" &&
magento-cloud db:dump -ze $entornoCloud -f bbdd_$(echo $entornoCloud)_$(date -I).sql.gz && cd .. &&
echo '' && echo "Reinicia servicios docker" && bin/restart && sleep 20 &&
echo '' && echo "Borrando bbdd $bbddName anterior" && echo "drop database $bbddName; create database $bbddName" | mysql -u root -pmagento -h 172.17.0.1 $bbddName &&
echo '' && echo "Importando nueva bbdd" && pv src/bbdd_$(echo $entornoCloud)_$(date -I).sql.gz | zcat | mysql -u root -pmagento -h 172.17.0.1 $bbddName &&
echo "update core_config_data set value = \"$url\" where path like \"%base_url%\" or path like \"%base_link_url%\";" | mysql -u root -pmagento -h 172.17.0.1 $bbddName &&
echo 'update sales_order set customer_email = replace(customer_email , "@", "@test") where customer_email NOT LIKE "%linets.cl%";' | mysql -u root -pmagento -h 172.17.0.1 $bbddName &&
echo 'update customer_entity set email = replace(email, "@", "@test") where email NOT LIKE "%linets.cl%";' | mysql -u root -pmagento -h 172.17.0.1 $bbddName &&
echo '' && echo "Cambiando a la rama $entornoCloud" && cd src && git checkout --track $(echo $remote)/$(echo $entornoCloud) 2> /dev/null; cd .. &&
echo '' && echo "Importando config en magento" && bin/magento app:config:import &&
echo '' && echo "Importando config custom para el entorno local" && bin/magento admin:user:create --admin-user="magento" --admin-password="magento123" --admin-email="admin@example.com" --admin-firstname="Admin" --admin-lastname="Admin" &&
bin/magento config:set web/url/use_store 1 &&
bin/magento config:set catalog/search/elasticsearch7_server_hostname 172.17.0.1 &&
echo '' && echo "Deploy magento y reindex" && bin/magento s:up && bin/magento indexer:reindex && echo "Listo."
----------


----------
Descargar imágenes del cloud (rama Evolutivo maui), ejecutar desde src:
----------
entorno=1.ent-rs3fciq7xma4k-staging-5em2ouy@ssh.us-3.magento.cloud #staging maui
entorno=1.ent-rs3fciq7xma4k-staging-5em2ouy@ssh.us-3.magento.cloud #prod maui
entorno=f33mkwqx5df5e-staging-5em2ouy--mymagento@ssh.us-5.magento.cloud #stg fob
rsync --progress --exclude "*tmp/*" --exclude "*catalog/product*" --include='*.png' --include='*.jpg' --include='*.jpeg' --include='*.svg' --include='*/' --exclude='*' -ahe 'ssh' $(echo $entorno):~/pub/media/ pub/media/ && cd .. && bin/copytocontainer pub/media && echo "Listo."
Staging a local:
rsync --progress -ahe ssh 1.ent-rs3fciq7xma4k-staging-5em2ouy@ssh.us-3.magento.cloud:/app/rs3fciq7xma4k_stg/pub/media/wysiwyg/ .
Local a prod:
rsync --progress -ahe ssh . 1.ent-rs3fciq7xma4k-production-vohbr3y@ssh.us-3.magento.cloud:/app/rs3fciq7xma4k/pub/media/wysiwyg/
----------


----------
repo.magento.com: 487e54978aa2587999004c639007b3b0  /  e0435dccfdeb71c2cba8a78db147a20c
----------


----------
Esto es lo que vamos a realizar para el paso a prod.
- Push prod a master ** (esto es para respandar última versión funcional)
- Update staging con prod ** (homologar ambientes)
- Pruebas en staging de maui y ripcurl
- Apuntar url final a prod, fastly (cliente) Configurar cnames (dominios)
- Push staging en prod ** (paso a proucción)
- Actualizar todos los cambios de DDBB (home, menú, categorías, páginas coroporativas, etc.)
- Configurar tbk prod
- Configurar despachos
- Importar productos (cliente)
----------


----------
SET global log_output = 'FILE';
SET global general_log_file='/var/www/html/mysql_general.log';
SET global general_log = 1;
----------


----------
Cómo poner slider owl carrousel con padding a los costados:
----------
// evitar en desktop:
.contentenedor {
    overflow: hidden;
    box-sizing: border-box;

    .owl-stage-outer {
        overflow: visible !important;
    }
}
//en mobile:
.contentenedor {
    width: 100vw;
    position: relative;
    left: 50%;
    margin-left: -50vw !important;
    padding: 0 40px !important;
    overflow: hidden !important;
}
----------




----------
Instalar grunt en docker magento:
----------
copiar package.json.sample y Gruntfile.js.sample
editar el themes.js
ejecutar bin/root npm install -g grunt-cli
ejecutar npm install y npm update en el dir de magento
usar con: bin/grunt exec && bin/grunt less && bin/grunt watch
----------




----------
Mostrar email por pantalla y en archivo magento 2:
----------
En función "prepareMessage" del archivo "vendor/magento/framework/Mail/Template/TransportBuilder.php":
        $myfile = fopen('../var/log/email' . time() . '.html', 'w+') or die('Unable to open file!');
        fwrite($myfile, $this->message->getBodyText()); fclose($myfile);
        echo $this->message->getBodyText(); exit;
        return $this;
----------




----------
Activar xdebug con vscode:
----------
- Revisar phpinfo para ver puerto
- Agregar config del php-debug con el archivo ".vscode" dentro de la carpeta src/ (corregir puerto con el visto en el paso anterior)
- Revisar IP del extra hosts en el docker-composer.yml
- Revisar xdebug mode con el comando "bin/xdebug status" y activar
- Agregar un breakpoint en el "pub/index.php" para ver si funciona ok
----------




----------
Activar grunt docker:
----------
cp package.json.sample package.json
cp Gruntfile.js.sample Gruntfile.js
cp grunt-config.json.sample grunt-config.json
npm install
npm update
nano dev/tools/grunt/configs/themes.js
mv dev/tools/grunt/configs/themes.js dev/tools/grunt/configs/local-themes.js
t=luma && bin/grunt exec:$t && bin/grunt less:$t && bin/grunt watch
----------





----------
Magento2 custom script:
----------
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

require 'app/bootstrap.php';
$bootstrap = Magento\Framework\App\Bootstrap::create(BP, $_SERVER);
$obj = $bootstrap->getObjectManager();

$test = $obj->create('Magento\Backend\Cron\CleanCache')->execute();
var_dump($test);

$obj->get('\Magento\Framework\App\State')->setAreaCode(\Magento\Framework\App\Area::AREA_ADMINHTML);
----------